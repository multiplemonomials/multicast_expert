name: test

on: push

jobs:
  test:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9
      - name: Install project
        run: poetry install --no-interaction
      - name: Configure IP routes # See "Development Setup.md"
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo ip -6 route add table local ff11::/16 dev lo
      - name: Run Pytest (Windows/Linux)
        if: ${{ matrix.os != 'macos-latest' }}
        run: poetry run pytest --capture=no

      # Note that on Mac, we need to run with sudo (see the FAQ section in the README for details).
      # To do this, we activate the Poetry environment, then use a special sudo command that runs
      # a command with the current process's current environment variables.
      - name: Run Pytest (Mac)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          $(poetry env activate)
          sudo -E env PATH="$PATH" pytest --capture=no

  # This job exists to run mypy on Windows and Mac, as sometimes it can turn up different errors in these cases.
  my-py:
    strategy:
      matrix:
        os: ["windows-latest", "macos-latest"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          # Normally we want to run this using the oldest supported python version to catch errors,
          # but we need at least py3.11 for the async code to work.
          python-version: "3.11"
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9
      - name: Install project
        run: poetry install --no-interaction
      - name: Run Mypy
        run: poetry run mypy -p multicast_expert
